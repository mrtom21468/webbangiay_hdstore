@using WebApplication7.Models
@model IEnumerable<WebApplication7.Models.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .icon-green{
        color: green;
    }
</style>
<h1>Quản lý sản phẩm</h1>

<p>
    <a asp-action="Create"><i class="fa fa-plus icon-green"></i>Tạo mới sản phẩm</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th >
                @Html.DisplayName("Ảnh")
            </th>
            <th >
                @Html.DisplayName("Tên sản phẩm")
            </th>
            <th >
                @Html.DisplayName("Thương hiệu")

            </th>
            <th >
                @Html.DisplayName("Thể loại")
            </th>
            <th>
                @Html.DisplayName("Tổng phiên bản")
            </th>
            <th >
                @Html.DisplayName("Tổng kho")
            </th>
            <th >
                @Html.DisplayName("Có thể bán")
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
              <td>
                    <img class="img-fluid" src=@item.ImagePath alt="" style="max-width: 30%; max-height: 30vh; width: auto;">
              </td>

            <td>
                    <h5><a style="color: initial; text-decoration: none; display: inline-block;" onmouseover="this.style.color='#7fad39'" onmouseout="this.style.color='initial'" href=@Url.Action("Manager","Products",new {id=@item.ProductId })>@item.ProductName</a></h5>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand.BrandName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
                <td>
                    @item.ProductDetails.Count()
                </td>
                <td>
                    @{
                        // Khởi tạo biến sum để tính tổng
                        int? sum = 0;

                        // Duyệt qua từng sản phẩm trong ProductDetails của item và tính tổng
                        foreach (var productDetail in item.ProductDetails)
                        {
                            sum += productDetail.Quantity;
                        }
                    }
                    @sum <!-- Hiển thị tổng -->
                </td>
                <td>
                    @{
                        bool isChecked = item.State ?? false; // Sử dụng null-coalescing operator để gán false nếu item.State là null
                    }
                    <input type="checkbox" class="stateCheckbox" data-id=@item.ProductId @(isChecked ? "checked" : "") />
                </td>
        </tr>
}
    </tbody>
</table>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Bắt sự kiện thay đổi của checkbox
        $('.stateCheckbox').change(function () {
            // Lấy giá trị mới của checkbox
            var newState = $(this).prop('checked');
            // Lấy ID của sản phẩm từ thuộc tính data-id
            var productId = $(this).data('id');
            // Gửi yêu cầu AJAX lên server
            $.ajax({
                url: '@Url.Action("UpdateState", "Products")', // Đường dẫn đến action cập nhật trạng thái
                type: 'POST',
                data: { productId: productId, newState: newState },
                success: function (response) {
                    // Xử lý kết quả nếu cần
                    var notyf = new Notyf();
                    notyf.success('Cập nhật thành công');
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi nếu có
                    notyf.error('Cập nhật lỗi');

                    console.error(error);
                }
            });
        });
    });
</script>